{"version":3,"file":"index.js","sources":["../src/components/Banner/index.tsx","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/api.tsx","../src/components/Code/actions.tsx","../src/components/Login/actions.tsx","../src/components/Code/index.tsx","../src/components/Alerts/Forgot/index.tsx","../src/components/Alerts/Network/index.tsx","../src/components/Alerts/Time/index.tsx","../src/components/Alerts/Session/index.tsx","../src/components/Terms/actions.tsx","../src/components/Terms/index.tsx","../src/components/Login/index.tsx","../src/components/Recover/actions.tsx","../src/components/Recover/index.tsx","../src/index.tsx","../src/components/Locales/index.tsx","../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport { Grid, Image, Header } from '@mw-kit/mw-ui'\n\nimport logo from '../../assets/logo.svg'\n\nconst Wrapper = styled(Grid.Column)`\n  background-size: cover;\n  background-image: url('${(props) => props.background}');\n  &::before {\n    content: '';\n    background-color: rgba(52, 85, 171, 0.9);\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 0;\n  }\n`\n\nconst Overlay = styled.div`\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 100%;\n  & > p {\n    font-size: 16px;\n    padding: 0 1rem;\n  }\n`\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport interface BannerProps {\n  logo?: string\n  background?: string\n  title: string\n  description: string\n  footer: string\n}\n\nexport const Banner = (props: BannerProps) => {\n  return (\n    <Wrapper background={props.background} color='blue'>\n      <Overlay>\n        <div>\n          <Image src={props.logo ? props.logo : logo} height={45} />\n        </div>\n        <Content>\n          <Header size='huge' inverted content={props.title} />\n          <p>{props.description}</p>\n        </Content>\n        <Footer>{props.footer}</Footer>\n      </Overlay>\n    </Wrapper>\n  )\n}\n\nBanner.defaultProps = {\n  background:\n    'https://iconesmw.s3-sa-east-1.amazonaws.com/trade_result/login/Background_Login.jpg'\n} as Partial<BannerProps>\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import axios from 'axios'\n\nexport const api = axios.create({\n  baseURL: 'https://api.xpto.ninja', // 'http://odin.local:8083', //\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n})\n\napi.interceptors.request.use(async (config) => {\n  const tokenKey = 'MwLoginToken'\n  const url = config.url\n  const language = localStorage.getItem('_LOCALE') || 'pt_BR'\n\n  config.headers['Accept-Language'] = language.replace('_', '-')\n\n  if (url === 'v1/users/token') {\n    sessionStorage.removeItem(tokenKey)\n    // never add token\n    return config\n  }\n\n  const token = sessionStorage.getItem(tokenKey)\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n\n  return config\n})\n","import { api } from '../../api'\n\nexport interface IPostUsersCheckCode {\n  account: number | string\n  code: string\n}\n\nexport function postUsersCheckCode(data: IPostUsersCheckCode) {\n  return api.post('v1/users/check-code', data)\n}\n","import { api } from '../../api'\n\nexport interface IgetToken {\n  account: number | string\n  username: string\n  password: string\n  force?: number\n  fail?: string\n}\n\nexport function getToken(data: IgetToken) {\n  return api.post('v1/users/token', data)\n}\n\nexport interface IPostUsersRecover {\n  account: number | string\n  username: string\n}\n\nexport function postUsersRecover(data: IPostUsersRecover) {\n  return api.post('v1/users/recover', data)\n}\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Grid,\n  Form,\n  Header,\n  Input,\n  Segment,\n  Message\n} from '@mw-kit/mw-ui'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useForm, Controller } from 'react-hook-form'\n\nimport ptBR from '../../i18n/locales/pt_BR.json'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport { IPostUsersCheckCode, postUsersCheckCode } from './actions'\nimport { postUsersRecover } from '../Login/actions'\n\nexport const Code = () => {\n  const [loading, setLoading] = useState<boolean>(false)\n  const [message, setMessage] = useState<string>('')\n\n  type Params = {\n    account: string\n    username: string\n    hash: string\n  }\n  const params: Params = useParams()\n  const history = useHistory()\n  const intl = useIntl()\n  const { control, formState, handleSubmit, register } = useForm<\n    IPostUsersCheckCode\n  >({\n    mode: 'onChange',\n    defaultValues: {\n      account: params.account,\n      code: params.hash === 'default' ? '' : params.hash\n    }\n  })\n\n  const { isValid } = formState\n\n  const resend = async () => {\n    const account = params.account || ''\n    const username = params.username || ''\n\n    // start loading\n    setLoading(true)\n\n    // reset messages\n    setMessage('')\n\n    try {\n      // get result\n      const res = await postUsersRecover({ account, username })\n\n      console.log(res)\n    } catch (error) {\n      console.log(error)\n    } finally {\n      // stop loading\n      setLoading(false)\n    }\n  }\n\n  const onSubmit = async (data: IPostUsersCheckCode) => {\n    try {\n      // clear message\n      setMessage('')\n\n      // get result\n      const res = await postUsersCheckCode(data)\n\n      // extract data\n      const d = res.data.data || {}\n      const token: string = d.token || ''\n      const userId: number = d.extra.users.id || 0\n\n      // save data\n      sessionStorage.setItem('MwLoginToken', token)\n\n      // redirect\n      history.push(`/recover/${data.account}/${userId}`)\n    } catch (error) {\n      const res = error.response?.data?.data\n      if (res) {\n        setMessage(res.message)\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Grid centered>\n        <Grid.Column width={8} textAlign='left' verticalAlign='middle'>\n          <Header size='large'>\n            <FormattedMessage\n              id='code.header.main'\n              defaultMessage={ptBR['code.header.main']}\n            />\n            <Header.Subheader>\n              <FormattedMessage\n                id='code.header.subheader'\n                defaultMessage={ptBR['code.header.subheader']}\n              />\n            </Header.Subheader>\n          </Header>\n          <br />\n          {message && <Message negative content={message} />}\n          <br />\n          <Form\n            onSubmit={handleSubmit(onSubmit)}\n            loading={formState.isSubmitting || loading}\n          >\n            <input name='account' type='hidden' ref={register} />\n            <Form.Field>\n              <Controller\n                as={Input}\n                name='code'\n                control={control}\n                rules={{ required: true }}\n                placeholder={intl.formatMessage({\n                  id: 'code.placeholder.code',\n                  defaultMessage: ptBR['code.placeholder.code']\n                })}\n                autoFocus\n              />\n            </Form.Field>\n            <Button\n              disabled={!isValid}\n              primary\n              type='submit'\n              fluid\n              content={intl.formatMessage({\n                id: 'code.button.submit',\n                defaultMessage: ptBR['code.button.submit']\n              })}\n            />\n            <Segment basic textAlign='center'>\n              <FormattedMessage\n                id='code.not_received'\n                defaultMessage={ptBR['code.not_received']}\n              />{' '}\n              <a href='#' onClick={resend}>\n                <FormattedMessage\n                  id='code.resend'\n                  defaultMessage={ptBR['code.resend']}\n                />\n              </a>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Button, Confirm, StrictConfirmProps } from '@mw-kit/mw-ui'\n\nimport ptBR from '../../../i18n/locales/pt_BR.json'\nimport { useIntl } from 'react-intl'\n\nexport const AlertsForgot = (props: StrictConfirmProps) => {\n  const intl = useIntl()\n\n  const header = intl.formatMessage({\n    id: 'alerts.forgot.header',\n    defaultMessage: ptBR['alerts.forgot.header']\n  })\n\n  const content = intl.formatMessage({\n    id: 'alerts.forgot.content',\n    defaultMessage: ptBR['alerts.forgot.content']\n  })\n\n  return (\n    <Confirm\n      open={props.open}\n      size='tiny'\n      onConfirm={props.onConfirm}\n      header={header}\n      content={content}\n      cancelButton={<React.Fragment />}\n      confirmButton={<Button content='Ok' />}\n    />\n  )\n}\n","import React from 'react'\nimport { Button, Confirm, StrictConfirmProps } from '@mw-kit/mw-ui'\n\nimport ptBR from '../../../i18n/locales/pt_BR.json'\nimport { useIntl } from 'react-intl'\n\nexport const AlertsNetwork = (props: StrictConfirmProps) => {\n  const intl = useIntl()\n\n  const header = intl.formatMessage({\n    id: 'alerts.network.header',\n    defaultMessage: ptBR['alerts.network.header']\n  })\n\n  const content = intl.formatMessage({\n    id: 'alerts.network.content',\n    defaultMessage: ptBR['alerts.network.content']\n  })\n\n  return (\n    <Confirm\n      open={props.open}\n      size='tiny'\n      onConfirm={props.onConfirm}\n      header={header}\n      content={content}\n      cancelButton={<React.Fragment />}\n      confirmButton={<Button negative content='Ok' />}\n    />\n  )\n}\n","import React from 'react'\nimport { Button, Confirm, StrictConfirmProps } from '@mw-kit/mw-ui'\n\nimport ptBR from '../../../i18n/locales/pt_BR.json'\nimport { useIntl } from 'react-intl'\n\nexport const AlertsTime = (props: StrictConfirmProps) => {\n  const intl = useIntl()\n\n  const header = intl.formatMessage({\n    id: 'alerts.time.header',\n    defaultMessage: ptBR['alerts.time.header']\n  })\n\n  const content = intl.formatMessage({\n    id: 'alerts.time.content',\n    defaultMessage: ptBR['alerts.time.content']\n  })\n\n  return (\n    <Confirm\n      open={props.open}\n      size='tiny'\n      onConfirm={props.onConfirm}\n      header={header}\n      content={content}\n      cancelButton={<React.Fragment />}\n      confirmButton={<Button negative content='Ok' />}\n    />\n  )\n}\n","import React from 'react'\nimport { Confirm, StrictConfirmProps } from '@mw-kit/mw-ui'\n\nimport ptBR from '../../../i18n/locales/pt_BR.json'\nimport { useIntl } from 'react-intl'\n\nexport const AlertsSession = (props: StrictConfirmProps) => {\n  const intl = useIntl()\n\n  const header = intl.formatMessage({\n    id: 'alerts.session.header',\n    defaultMessage: ptBR['alerts.session.header']\n  })\n\n  const content = intl.formatMessage({\n    id: 'alerts.session.content',\n    defaultMessage: ptBR['alerts.session.content']\n  })\n\n  return (\n    <Confirm\n      open={props.open}\n      size='tiny'\n      onCancel={props.onCancel}\n      onConfirm={props.onConfirm}\n      header={header}\n      content={content}\n      cancelButton={intl.formatMessage({\n        id: 'cancel',\n        defaultMessage: ptBR.cancel\n      })}\n      confirmButton={intl.formatMessage({\n        id: 'confirm',\n        defaultMessage: ptBR.confirm\n      })}\n    />\n  )\n}\n","import { api } from '../../api'\n\nexport interface getTermProps {\n  id: number\n}\n\nexport function getTerm(data: getTermProps) {\n  return api.get(`v1/terms/${data.id}`)\n}\n\nexport function postTermsAccept(id: number) {\n  return api.post(`v1/terms/accept/${id}`)\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Header,\n  Modal,\n  Placeholder,\n  Checkbox,\n  StrictModalProps\n} from '@mw-kit/mw-ui'\nimport styled from 'styled-components'\n\nimport ptBR from '../../i18n/locales/pt_BR.json'\nimport { useIntl, FormattedMessage } from 'react-intl'\n\nimport { getTerm, postTermsAccept } from './actions'\n\ntype Terms = {\n  id: number\n}\n\ninterface TermsProps extends StrictModalProps {\n  term: Terms\n  onCancel: CallableFunction\n  onSuccess: CallableFunction\n}\n\ninterface TermEntity {\n  id: number | string\n  content: string\n}\n\nconst FakeTerms = () => {\n  return (\n    <Placeholder fluid>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n    </Placeholder>\n  )\n}\n\nconst WrapperModalActions = styled(Modal.Actions)`\n  display: flex;\n  align-items: center;\n  & > div:first-child {\n    text-align: left;\n    flex-grow: 1;\n  }\n`\n\nexport const Terms = (props: TermsProps) => {\n  const [saving, setSaving] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [accept, setAccept] = useState<boolean | undefined>(false)\n  const [term, setTerm] = useState<TermEntity>({\n    id: '',\n    content: ''\n  })\n\n  const intl = useIntl()\n  const termId = props.term.id\n\n  useEffect(() => {\n    if (!termId) {\n      return\n    }\n\n    // Create an scoped async function in the hook\n    async function getData() {\n      setLoading(true)\n      try {\n        // get term\n        const res = await getTerm(props.term)\n\n        // set term\n        setTerm(res.data.data)\n      } catch (error) {\n        console.log('error', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    // Execute the created function directly\n    getData()\n  }, [termId])\n\n  const handleAccept = async () => {\n    try {\n      setSaving(true)\n\n      // accept terms\n      const res = await postTermsAccept(termId)\n\n      // return data\n      props.onSuccess(res.data)\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  return (\n    <Modal open={props.open} size='small'>\n      <Header>\n        <FormattedMessage\n          id='terms.header'\n          defaultMessage={ptBR['terms.header']}\n        />\n      </Header>\n      <Modal.Content scrolling>\n        {loading ? (\n          <FakeTerms />\n        ) : (\n          <p dangerouslySetInnerHTML={{ __html: term.content }} />\n        )}\n      </Modal.Content>\n      <WrapperModalActions>\n        <Checkbox\n          checked={accept}\n          label={intl.formatMessage({\n            id: 'terms.accept',\n            defaultMessage: ptBR['terms.accept']\n          })}\n          onChange={(e, { checked }) => {\n            setAccept(checked)\n          }}\n        />\n        <div>\n          <Button\n            basic\n            onClick={() => props.onCancel()}\n            content={intl.formatMessage({\n              id: 'generic.back',\n              defaultMessage: ptBR['generic.back']\n            })}\n          />\n\n          <Button\n            disabled={!accept || saving}\n            primary\n            onClick={handleAccept}\n            loading={saving}\n            content={intl.formatMessage({\n              id: 'generic.continue',\n              defaultMessage: ptBR['generic.continue']\n            })}\n          />\n        </div>\n      </WrapperModalActions>\n    </Modal>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport {\n  Form,\n  Checkbox,\n  Button,\n  Grid,\n  Header,\n  Input,\n  Message\n} from '@mw-kit/mw-ui'\nimport { useForm, Controller } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\n\n// validator\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers'\n\n// get actions\nimport { IgetToken, getToken, postUsersRecover } from './actions'\n\n// get styles\nimport styled from 'styled-components'\n\nimport {\n  AlertsForgot,\n  AlertsSession,\n  AlertsNetwork,\n  AlertsTime\n} from '../Alerts'\nimport { Terms } from '../Terms'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport ptBR from '../../i18n/locales/pt_BR.json'\n\ninterface LoginProps {\n  onSuccess: CallableFunction\n}\n\nconst WrapperForgot = styled(Form.Field)`\n  position: absolute;\n  right: 0;\n`\n\nexport const Login = (props: LoginProps) => {\n  const mwLogin = JSON.parse(localStorage.getItem('MwLogin') || '{}')\n  const mwLoginRemember = !!mwLogin.account\n\n  const [showPassword, toggleShowPassword] = useState<boolean>(false)\n  const [showFailSession, setShowFailSession] = useState<boolean>(false)\n  const [showFailNetwork, setShowFailNetwork] = useState<boolean>(false)\n  const [showFailTime, setShowFailTime] = useState<boolean>(false)\n  const [showFailTerms, setShowFailTerms] = useState<boolean>(false)\n  const [showAlertForgot, setShowAlertForgot] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [account, setAccount] = useState<string | number>('')\n  const [username, setUsername] = useState<string>('')\n  const [remember, setRemember] = useState<boolean>(mwLoginRemember)\n\n  const [message, setMessage] = useState<string>('')\n  const [termId, setTermId] = useState<number>(0)\n\n  const loginSchema = yup.object().shape({\n    account: yup.number().required().positive().integer(),\n    username: yup.string().required(),\n    password: yup.string().required(),\n    force: yup.number(),\n    fail: yup.string()\n  })\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    formState,\n    setValue,\n    getValues,\n    errors\n  } = useForm<IgetToken>({\n    mode: 'onChange',\n    defaultValues: {\n      account: mwLogin.account || '',\n      username: mwLogin.username || '',\n      password: '',\n      force: 0,\n      fail: ''\n    },\n    resolver: yupResolver(loginSchema)\n  })\n\n  const refLoginForm = useRef<HTMLFormElement>(null)\n  const history = useHistory()\n  const intl = useIntl()\n  const { isValid } = formState\n\n  const handleSuccess = (user: any) => {\n    props.onSuccess(user)\n\n    alert('success!')\n  }\n\n  const handleForgot = async () => {\n    // get values\n    const values = getValues()\n\n    // valid\n    if (errors.account || errors.username) {\n      setMessage('dados invalidos')\n      return\n    }\n\n    // start loading\n    setLoading(true)\n\n    // clean message\n    setMessage('')\n\n    try {\n      // dispath recover\n      await postUsersRecover(values)\n\n      // set account\n      setAccount(values.account)\n      setUsername(values.username)\n\n      // show alert\n      setShowAlertForgot(true)\n    } catch (error) {\n      console.log(error)\n    } finally {\n      // stop loading\n      setLoading(false)\n    }\n  }\n\n  const onSubmit = async (data: IgetToken) => {\n    if (remember) {\n      localStorage.setItem(\n        'MwLogin',\n        JSON.stringify({\n          account: data.account,\n          username: data.username\n        })\n      )\n    } else {\n      localStorage.removeItem('MwLogin')\n    }\n\n    try {\n      // clear message\n      setMessage('')\n\n      // get token\n      const res = await getToken(data)\n\n      // extract data\n      const token: string = res.data.data.token || ''\n      const fail: string = res.data.data.fail || ''\n      const extra: any = res.data.data.extra || {}\n\n      if (token && fail === '') {\n        // call success\n        handleSuccess(res.data)\n      } else if (fail === 'terms') {\n        // set temporary token\n        sessionStorage.setItem('MwLoginToken', token)\n\n        // set term id\n        setTermId(extra.terms?.id)\n\n        // call terms modal\n        setShowFailTerms(true)\n      } else if (fail === 'session') {\n        // call session modal\n        setShowFailSession(true)\n      } else if (fail === 'network') {\n        // call network modal\n        setShowFailNetwork(true)\n      } else if (fail === 'time') {\n        // call time modal\n        setShowFailTime(true)\n      }\n    } catch (error) {\n      const res = error.response?.data?.data\n      if (res) {\n        setMessage(res.message)\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <AlertsForgot\n        open={showAlertForgot}\n        onConfirm={() => {\n          history.push(`/code/${account}/${username}/default`)\n        }}\n      />\n\n      <AlertsNetwork\n        open={showFailNetwork}\n        onConfirm={() => setShowFailNetwork(false)}\n      />\n\n      <AlertsSession\n        open={showFailSession}\n        onCancel={() => setShowFailSession(false)}\n        onConfirm={() => {\n          // force login\n          setValue('force', 1)\n\n          // hide modal\n          setShowFailSession(false)\n\n          // dispath form\n          refLoginForm?.current?.handleSubmit()\n        }}\n      />\n\n      <AlertsTime\n        open={showFailTime}\n        onConfirm={() => setShowFailTime(false)}\n      />\n\n      <Terms\n        open={showFailTerms}\n        term={{ id: termId }}\n        onCancel={() => setShowFailTerms(false)}\n        onSuccess={(data: any) => {\n          // close modal\n          setShowFailTerms(false)\n\n          // call success\n          handleSuccess(data)\n        }}\n      />\n\n      <Grid centered>\n        <Grid.Column width={8} textAlign='left' verticalAlign='middle'>\n          <Header size='large'>\n            <FormattedMessage\n              id='login.header.main'\n              defaultMessage={ptBR['login.header.main']}\n            />\n          </Header>\n          <br />\n          {message && <Message negative content={message} />}\n          <br />\n          <Form\n            ref={refLoginForm}\n            onSubmit={handleSubmit(onSubmit)}\n            loading={formState.isSubmitting || loading}\n          >\n            <input name='force' type='hidden' ref={register} />\n            <input name='fail' type='hidden' ref={register} />\n            <Form.Field>\n              <label>\n                <FormattedMessage\n                  id='login.label.account'\n                  defaultMessage={ptBR['login.label.account']}\n                />\n              </label>\n              <Controller\n                as={Input}\n                name='account'\n                control={control}\n                placeholder={intl.formatMessage({\n                  id: 'login.placeholder.account',\n                  defaultMessage: ptBR['login.placeholder.account']\n                })}\n                autoFocus\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>\n                <FormattedMessage\n                  id='login.label.username'\n                  defaultMessage={ptBR['login.label.username']}\n                />\n              </label>\n              <Controller\n                as={Input}\n                name='username'\n                control={control}\n                placeholder={intl.formatMessage({\n                  id: 'login.placeholder.username',\n                  defaultMessage: ptBR['login.placeholder.username']\n                })}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>\n                <FormattedMessage\n                  id='login.label.password'\n                  defaultMessage={ptBR['login.label.password']}\n                />\n              </label>\n              <Controller\n                as={Input}\n                name='password'\n                type={showPassword ? 'text' : 'password'}\n                control={control}\n                icon={{\n                  name: `eye${showPassword ? ' slash' : ''}`,\n                  link: true,\n                  onClick: () => toggleShowPassword(!showPassword)\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'login.placeholder.password',\n                  defaultMessage: ptBR['login.placeholder.password']\n                })}\n              />\n            </Form.Field>\n\n            <Form.Group>\n              <Form.Field>\n                <Checkbox\n                  name='remember'\n                  label={intl.formatMessage({\n                    id: 'login.label.remember',\n                    defaultMessage: ptBR['login.label.remember']\n                  })}\n                  checked={remember}\n                  onChange={() => setRemember(!remember)}\n                  ref={register}\n                />\n              </Form.Field>\n              <WrapperForgot>\n                <a href='#' onClick={handleForgot}>\n                  <FormattedMessage\n                    id='login.forgot'\n                    defaultMessage={ptBR['login.forgot']}\n                  />\n                </a>\n              </WrapperForgot>\n            </Form.Group>\n            <Button disabled={!isValid} primary type='submit' fluid>\n              <FormattedMessage\n                id='login.button.submit'\n                defaultMessage={ptBR['login.button.submit']}\n              />\n            </Button>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import { api } from '../../api'\n\nexport interface IPutUsersPassword {\n  id: number\n  password: string\n  password_confirm?: string\n}\n\nexport function putUsersPassword(data: IPutUsersPassword) {\n  return api.put(`v1/users/${data.id}`, data)\n}\n","import React, { useState } from 'react'\nimport { Button, Grid, Form, Header, Input, Message } from '@mw-kit/mw-ui'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useForm, Controller } from 'react-hook-form'\n\nimport ptBR from '../../i18n/locales/pt_BR.json'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\n// validator\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers'\n\nimport { IPutUsersPassword, putUsersPassword } from './actions'\n\nexport const Recover = () => {\n  const [message, setMessage] = useState<string>('')\n\n  type Params = {\n    account: any\n    id: any\n  }\n\n  const params: Params = useParams()\n  const history = useHistory()\n  const intl = useIntl()\n  const RecoverSchema = yup.object().shape({\n    id: yup.number().required().positive().integer(),\n    password: yup.string().required(),\n    password_confirm: yup\n      .string()\n      .required()\n      .equals([yup.ref('password')])\n  })\n\n  const { control, formState, handleSubmit, register } = useForm<\n    IPutUsersPassword\n  >({\n    mode: 'onChange',\n    defaultValues: {\n      id: params.id,\n      password: '',\n      password_confirm: ''\n    },\n    resolver: yupResolver(RecoverSchema)\n  })\n\n  const { isValid } = formState\n\n  const onSubmit = async (data: IPutUsersPassword) => {\n    try {\n      // clear message\n      setMessage('')\n\n      // get result\n      await putUsersPassword(data)\n\n      // go login\n      history.push('/')\n    } catch (error) {\n      const res = error.response?.data?.data\n      if (res) {\n        setMessage(res.message)\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Grid centered>\n        <Grid.Column width={8} textAlign='left' verticalAlign='middle'>\n          <Header size='large'>\n            <FormattedMessage\n              id='recover.header.main'\n              defaultMessage={ptBR['recover.header.main']}\n            />\n          </Header>\n          <br />\n          {message && <Message negative content={message} />}\n          <br />\n          <Form\n            onSubmit={handleSubmit(onSubmit)}\n            loading={formState.isSubmitting}\n          >\n            <input name='id' type='hidden' ref={register} />\n            <Form.Field>\n              <label>Nova senha</label>\n              <Controller\n                as={Input}\n                type='password'\n                name='password'\n                control={control}\n                rules={{ required: true }}\n                placeholder={intl.formatMessage({\n                  id: 'recover.placeholder.password',\n                  defaultMessage: ptBR['recover.placeholder.password']\n                })}\n                autoFocus\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Repetir senha</label>\n              <Controller\n                as={Input}\n                type='password'\n                name='password_confirm'\n                control={control}\n                rules={{ required: true }}\n                placeholder={intl.formatMessage({\n                  id: 'recover.placeholder.password_confirm',\n                  defaultMessage: ptBR['recover.placeholder.password_confirm']\n                })}\n              />\n            </Form.Field>\n            <Button\n              disabled={!isValid}\n              primary\n              type='submit'\n              fluid\n              content={intl.formatMessage({\n                id: 'recover.button.submit',\n                defaultMessage: ptBR['recover.button.submit']\n              })}\n            />\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React, { createContext, useState } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Grid } from '@mw-kit/mw-ui'\n\nimport {\n  Banner,\n  BannerProps,\n  Code,\n  Login,\n  Recover,\n  Locales\n} from './components'\n\nimport styled from 'styled-components'\nimport ptBR from './i18n/locales/pt_BR.json'\nimport enUS from './i18n/locales/en_US.json'\n\ninterface MwLoginProps {\n  basename: string\n  banner: BannerProps\n  onSuccess: CallableFunction\n}\n\nif (!localStorage.hasOwnProperty('_LOCALE')) {\n  localStorage.setItem('_LOCALE', navigator.language.replace('-', '_'))\n}\n\nconst localeLocal = localStorage.getItem('_LOCALE') || 'pt_BR'\nconst Container = styled(Grid)`\n  margin: 0 !important;\n  height: 100%;\n`\n\nconst messages = {\n  pt_BR: ptBR,\n  en_US: enUS\n}\n\ninterface ContextProps {\n  locale: string\n  changeLocale: CallableFunction\n}\n\nexport const Context = createContext<Partial<ContextProps>>({})\n\nexport const MwLogin = (props: MwLoginProps) => {\n  console.log('localeLocal', localeLocal)\n\n  const [locale, setLocale] = useState<string>(localeLocal)\n\n  const changeLocale = (locale: string) => {\n    // change locale\n    setLocale(locale)\n\n    // save on local storate\n    localStorage.setItem('_LOCALE', locale)\n  }\n\n  return (\n    <Context.Provider value={{ locale, changeLocale }}>\n      <IntlProvider\n        locale={locale.replace('_', '-')}\n        messages={messages[locale]}\n      >\n        <Router basename={props.basename}>\n          <Container stackable stretched textAlign='center'>\n            <Grid.Row columns='equal'>\n              <Banner {...props.banner} />\n              <Grid.Column>\n                <Locales />\n                <Switch>\n                  <Route exact path='/login'>\n                    <Login {...props} />\n                  </Route>\n                  <Route exact path='/code/:account/:username/:hash'>\n                    <Code />\n                  </Route>\n                  <Route exact path='/recover/:account/:id'>\n                    <Recover />\n                  </Route>\n                  <Route>\n                    <Login {...props} />\n                  </Route>\n                </Switch>\n              </Grid.Column>\n            </Grid.Row>\n          </Container>\n        </Router>\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Dropdown } from '@mw-kit/mw-ui'\nimport styled from 'styled-components'\nimport { Context } from '../../index'\n\nconst languages = {\n  en_US: 'English',\n  pt_BR: 'Português'\n}\n\nconst Wrapper = styled.div`\n  position: absolute;\n  right: 1rem;\n`\n\nexport const Locales = () => {\n  const options = [\n    {\n      key: 'en_US',\n      text: 'English',\n      value: 'en_US'\n    },\n    {\n      key: 'pt_BR',\n      text: 'Português',\n      value: 'pt_BR'\n    }\n  ]\n\n  const context = useContext(Context)\n\n  return (\n    <Wrapper>\n      <Dropdown\n        text={languages[context.locale || 'pt_BR']}\n        direction='left'\n        options={options}\n        value={context.locale}\n        onChange={(e, { value }) => {\n          context.changeLocale && context.changeLocale(value)\n        }}\n      />\n    </Wrapper>\n  )\n}\n","import React, { createContext, useState } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Grid } from '@mw-kit/mw-ui'\n\nimport {\n  Banner,\n  BannerProps,\n  Code,\n  Login,\n  Recover,\n  Locales\n} from './components'\n\nimport styled from 'styled-components'\nimport ptBR from './i18n/locales/pt_BR.json'\nimport enUS from './i18n/locales/en_US.json'\n\ninterface MwLoginProps {\n  basename: string\n  banner: BannerProps\n  onSuccess: CallableFunction\n}\n\nif (!localStorage.hasOwnProperty('_LOCALE')) {\n  localStorage.setItem('_LOCALE', navigator.language.replace('-', '_'))\n}\n\nconst localeLocal = localStorage.getItem('_LOCALE') || 'pt_BR'\nconst Container = styled(Grid)`\n  margin: 0 !important;\n  height: 100%;\n`\n\nconst messages = {\n  pt_BR: ptBR,\n  en_US: enUS\n}\n\ninterface ContextProps {\n  locale: string\n  changeLocale: CallableFunction\n}\n\nexport const Context = createContext<Partial<ContextProps>>({})\n\nexport const MwLogin = (props: MwLoginProps) => {\n  console.log('localeLocal', localeLocal)\n\n  const [locale, setLocale] = useState<string>(localeLocal)\n\n  const changeLocale = (locale: string) => {\n    // change locale\n    setLocale(locale)\n\n    // save on local storate\n    localStorage.setItem('_LOCALE', locale)\n  }\n\n  return (\n    <Context.Provider value={{ locale, changeLocale }}>\n      <IntlProvider\n        locale={locale.replace('_', '-')}\n        messages={messages[locale]}\n      >\n        <Router basename={props.basename}>\n          <Container stackable stretched textAlign='center'>\n            <Grid.Row columns='equal'>\n              <Banner {...props.banner} />\n              <Grid.Column>\n                <Locales />\n                <Switch>\n                  <Route exact path='/login'>\n                    <Login {...props} />\n                  </Route>\n                  <Route exact path='/code/:account/:username/:hash'>\n                    <Code />\n                  </Route>\n                  <Route exact path='/recover/:account/:id'>\n                    <Recover />\n                  </Route>\n                  <Route>\n                    <Login {...props} />\n                  </Route>\n                </Switch>\n              </Grid.Column>\n            </Grid.Row>\n          </Container>\n        </Router>\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n"],"names":["Wrapper","styled","Grid","Column","props","background","Overlay","div","Content","Footer","Banner","React","color","Image","src","logo","height","Header","size","inverted","content","title","description","footer","defaultProps","api","axios","create","baseURL","headers","Accept","interceptors","request","use","config","tokenKey","url","language","localStorage","getItem","replace","sessionStorage","removeItem","token","Authorization","postUsersCheckCode","data","post","getToken","postUsersRecover","Code","useState","loading","setLoading","message","setMessage","params","useParams","history","useHistory","intl","useIntl","useForm","mode","defaultValues","account","code","hash","control","formState","handleSubmit","register","isValid","resend","username","res","console","log","error","onSubmit","d","userId","extra","users","id","setItem","push","response","Fragment","centered","width","textAlign","verticalAlign","FormattedMessage","defaultMessage","ptBR","Subheader","Message","negative","Form","isSubmitting","name","type","ref","Field","Controller","as","Input","rules","required","placeholder","formatMessage","autoFocus","Button","disabled","primary","fluid","Segment","basic","href","onClick","AlertsForgot","header","Confirm","open","onConfirm","cancelButton","confirmButton","AlertsNetwork","AlertsTime","AlertsSession","onCancel","cancel","confirm","getTerm","get","postTermsAccept","FakeTerms","Placeholder","Paragraph","Line","WrapperModalActions","Modal","Actions","Terms","saving","setSaving","accept","setAccept","term","setTerm","termId","useEffect","getData","handleAccept","onSuccess","scrolling","dangerouslySetInnerHTML","__html","Checkbox","checked","label","onChange","e","WrapperForgot","Login","mwLogin","JSON","parse","mwLoginRemember","showPassword","toggleShowPassword","showFailSession","setShowFailSession","showFailNetwork","setShowFailNetwork","showFailTime","setShowFailTime","showFailTerms","setShowFailTerms","showAlertForgot","setShowAlertForgot","setAccount","setUsername","remember","setRemember","setTermId","loginSchema","yup","shape","positive","integer","password","force","fail","resolver","yupResolver","setValue","getValues","errors","refLoginForm","useRef","handleSuccess","user","alert","handleForgot","values","stringify","terms","current","icon","link","Group","putUsersPassword","put","Recover","RecoverSchema","password_confirm","equals","hasOwnProperty","navigator","localeLocal","Container","Context","createContext","languages","en_US","pt_BR","Locales","options","key","text","value","context","useContext","Dropdown","locale","direction","changeLocale","messages","enUS","MwLogin","setLocale","Provider","IntlProvider","Router","basename","stackable","stretched","Row","columns","banner","Switch","Route","exact","path"],"mappings":"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"}